
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author jinthu
 */
public class PostgraduateAddResults extends javax.swing.JFrame {

    /**
     * Creates new form PostgraduateAddResults
     */
    public PostgraduateAddResults() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        indexNo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        title = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        marks = new javax.swing.JTextField();
        addResults = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        course = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        back.setBackground(new java.awt.Color(255, 255, 255));
        back.setFont(new java.awt.Font("Lato", 1, 15)); // NOI18N
        back.setForeground(new java.awt.Color(40, 162, 226));
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Lato", 1, 15)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(145, 164, 163));
        jLabel1.setText("Index No:");

        indexNo.setFont(new java.awt.Font("Lato", 1, 15)); // NOI18N
        indexNo.setForeground(new java.awt.Color(145, 164, 163));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Lato", 1, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(145, 164, 163));
        jLabel2.setText("Subject Code:");

        title.setFont(new java.awt.Font("Lato", 1, 15)); // NOI18N
        title.setForeground(new java.awt.Color(145, 164, 163));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Lato", 1, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(145, 164, 163));
        jLabel3.setText("Final Marks:");

        marks.setFont(new java.awt.Font("Lato", 1, 15)); // NOI18N
        marks.setForeground(new java.awt.Color(145, 164, 163));

        addResults.setBackground(new java.awt.Color(255, 255, 255));
        addResults.setFont(new java.awt.Font("Lato", 1, 15)); // NOI18N
        addResults.setForeground(new java.awt.Color(40, 162, 226));
        addResults.setText("Add Results");
        addResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addResultsActionPerformed(evt);
            }
        });

        reset.setBackground(new java.awt.Color(40, 162, 226));
        reset.setFont(new java.awt.Font("Lato", 1, 15)); // NOI18N
        reset.setForeground(new java.awt.Color(255, 255, 255));
        reset.setText("Reset");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Lato", 1, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(145, 164, 163));
        jLabel4.setText("Course:");

        course.setFont(new java.awt.Font("Lato", 1, 15)); // NOI18N
        course.setForeground(new java.awt.Color(145, 164, 163));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(back)
                .addGap(28, 28, 28))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(indexNo, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                            .addComponent(title)
                            .addComponent(marks)
                            .addComponent(course)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(addResults, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(277, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(back)
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(course, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(indexNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(marks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addResults)
                    .addComponent(reset))
                .addContainerGap(262, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addResultsActionPerformed
        try{
            String result="";
            int ans;
            double gpa=0.0;
            int total = 0;
            int count=0;
            int mark = Integer.parseInt(marks.getText());
            
            
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3308/nsbm","root","123456");
            
            
            String query1 = "select sum(results) as total from postgraduateassignment where indexNo='"+indexNo.getText().toUpperCase()+"' and title='"+title.getText().toUpperCase()+"'";
            
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query1);
            
            if(rs.next()){
                total = rs.getInt("total");
            }
            
            Statement st1 = con.createStatement();
            
                
            
            String query2 = "select count(results) as co from postgraduateassignment where indexNo='"+indexNo.getText().toUpperCase()+"' and title='"+title.getText().toUpperCase()+"'";
            ResultSet rs1 = st.executeQuery(query2);
            if(rs1.next()){
                count = rs1.getInt("co");
            }
            
            double average = (double)total/count;
            int percentage=0;
            
            String query3 = "select assignment from postgraduatestudentsubjects where title='"+title.getText().toUpperCase()+"'";
            ResultSet rs3 = st.executeQuery(query3);
            
            if(rs3.next()){
                percentage = Integer.parseInt(rs3.getString("assignment"));
            }
            
            int last = (int)((percentage*average)+((100-percentage)*mark));
            ans = last/100;
            
            if(ans<=100 && ans>=75){
                result = "A";
                gpa = 4.0;
            }
            else if(ans<75 && ans>=65){
                result = "B";
                gpa = 3.5;
            }
            else if(ans<65 && ans>=55){
                result = "C";
                gpa = 3.0;
            }
            else if(ans<55 && ans>=45){
                result = "D";
                gpa = 2.5;
            }
            else if(ans<45 && ans>=35){
                result = "E";
                gpa = 2.0;
            }
            else{
                result = "F";
                gpa = 0.0;
            }
            
            String query = "update postgraduatesubjects set result='"+result+"',gpa="+gpa+"where indexno=? and title=?";
            PreparedStatement pst = con.prepareStatement(query);
            pst.setString(1,indexNo.getText().toUpperCase());
            pst.setString(2,title.getText().toUpperCase());
            pst.executeUpdate();
            
            
            //getting sum of gpa from all subjects
            Statement st4 = con.createStatement();
            String query4 = "select sum(gpa) as total from postgraduatestudentsubjects where indexno='"+indexNo.getText().toUpperCase()+"'";
            ResultSet rs4 = st4.executeQuery(query4);
            double totalGpa = 0;
            if(rs4.next()){
                totalGpa = rs4.getDouble("total");
            }
            
            
           
            
            
            //taking number of subjects to find the average of Gpa
            Statement st5 = con.createStatement();
            String query5 = "select count(gpa) as num from postgraduatestudentsubjects where indexno='"+indexNo.getText().toUpperCase()+"'";
            ResultSet rs5 = st5.executeQuery(query5);
            int countGpa = 0;
            if(rs5.next()){
                countGpa = rs5.getInt("num");
            }
            
            
            double finalGpa = totalGpa/countGpa;
            
            //updating the gpa for the semester for the current student
            String query6 = "update postgraduatesemester set gpa=? where indexno='"+indexNo.getText().toUpperCase()+"'";
            PreparedStatement pst6 = con.prepareStatement(query6);
            pst6.setDouble(1,finalGpa);
            pst6.executeUpdate();
            
            
            //taking all the semester gpa
            Statement st7 = con.createStatement();
            String query7 = "select sum(gpa) as gpa from postgraduatesemester where indexno='"+indexNo.getText().toUpperCase()+"'";
            ResultSet rs7 = st7.executeQuery(query7);
            double lastGpa = 0;
            if(rs7.next()){
                lastGpa = rs7.getDouble("gpa");
            }
            
            
            //taking number of semester to find the total average gpa
            Statement st8 = con.createStatement();
            String query8 = "select count(gpa) as gpa from postgraduatesemester where indexno='"+indexNo.getText().toUpperCase()+"'";
            ResultSet rs8 = st7.executeQuery(query7);
            int totalCount = 0;
            if(rs7.next()){
                totalCount = rs7.getInt("gpa");
            }
            
            double addGpa = lastGpa/totalCount;
            
            
            //updating the current gpa for the student
            String query9 = "update postgraduate set gpa=? where indexno='"+indexNo.getText().toUpperCase()+"'";
            PreparedStatement pst1 = con.prepareStatement(query9);
            pst1.setDouble(1,addGpa);
            pst1.executeUpdate();
            
            //ranking
            ArrayList<PostGraduateStudent> students = new ArrayList<>();
            Statement st10 = con.createStatement();
            String query10 = "select * from postgraduate where indexno='"+indexNo.getText().toUpperCase()+"' and course='"+course.getText().toUpperCase()+"'";
            ResultSet rs10 = st10.executeQuery(query10);
            while(rs10.next()){
                PostGraduateStudent bs = new PostGraduateStudent(rs10.getString("indexno"),rs10.getString("name"),rs10.getString("address"),rs10.getString("nic"),rs10.getString("dob"),rs10.getString("institute"),rs10.getString("qualificationtype"),rs10.getString("gender"),rs10.getString("course"),rs10.getInt("yearofgraduate"),rs10.getString("intake"),rs10.getInt("year"),rs10.getInt("rank"),rs10.getDouble("gpa"));
                students.add(bs);
            }
            
            for(int i=0;i<students.size();i++){
                for(int j=0;j<students.size();j++){
                    if(students.get(i).getGpa()<students.get(j).getGpa()){
                        PostGraduateStudent temp = students.get(i);
                        students.set(i,students.get(j));
                        students.set(j,temp);
                    }
                }
            }
            
            int rank = 1;
            for(int i=0;i<students.size();i++){
                String index = students.get(i).getIndexNo();
                String query11 = "update postgraduate set rank=? where indexNo='"+index+"'";
                PreparedStatement pst2 = con.prepareStatement(query11);
                pst2.setInt(1,rank);
                pst2.executeUpdate();
                rank++;
                
            }
            
            
            
            
            JOptionPane.showMessageDialog(null,"Result Added Successfully!!!");
            
         }
         
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
    }//GEN-LAST:event_addResultsActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        this.hide();
        PostgraduateResultDetails result = new PostgraduateResultDetails();
        result.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PostgraduateAddResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PostgraduateAddResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PostgraduateAddResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PostgraduateAddResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PostgraduateAddResults().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addResults;
    private javax.swing.JButton back;
    private javax.swing.JTextField course;
    private javax.swing.JTextField indexNo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField marks;
    private javax.swing.JButton reset;
    private javax.swing.JTextField title;
    // End of variables declaration//GEN-END:variables
}
